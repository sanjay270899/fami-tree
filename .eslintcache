[{"D:\\Sanjay\\Git and Github\\My Repos\\fami-tree\\src\\App.js":"1","D:\\Sanjay\\Git and Github\\My Repos\\fami-tree\\src\\components\\Header\\index.js":"2","D:\\Sanjay\\Git and Github\\My Repos\\fami-tree\\src\\components\\Body\\index.js":"3","D:\\Sanjay\\Git and Github\\My Repos\\fami-tree\\src\\index.js":"4","D:\\Sanjay\\Git and Github\\My Repos\\fami-tree\\src\\components\\Box\\index.js":"5","D:\\Sanjay\\Git and Github\\My Repos\\fami-tree\\src\\components\\Container\\index.js":"6"},{"size":207,"mtime":1608925586286,"results":"7","hashOfConfig":"8"},{"size":250,"mtime":1608897210606,"results":"9","hashOfConfig":"8"},{"size":1762,"mtime":1608974806122,"results":"10","hashOfConfig":"8"},{"size":500,"mtime":1608061339662,"results":"11","hashOfConfig":"8"},{"size":2296,"mtime":1608931271604,"results":"12","hashOfConfig":"8"},{"size":1278,"mtime":1608927668488,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rb21jy",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Sanjay\\Git and Github\\My Repos\\fami-tree\\src\\App.js",[],"D:\\Sanjay\\Git and Github\\My Repos\\fami-tree\\src\\components\\Header\\index.js",[],"D:\\Sanjay\\Git and Github\\My Repos\\fami-tree\\src\\components\\Body\\index.js",[],"D:\\Sanjay\\Git and Github\\My Repos\\fami-tree\\src\\index.js",[],"D:\\Sanjay\\Git and Github\\My Repos\\fami-tree\\src\\components\\Box\\index.js",["27","28"],"import React, { useState } from 'react';\r\nimport '../../assets/style/Box.css';\r\nimport defaultProfile from '../../assets/img/default.jpg';\r\n\r\nfunction Box(props) {\r\n\r\n    const [data, setData] = useState(props.data);\r\n    const [isEdit, setIsEdit] = useState(false);\r\n\r\n    function toggleEdit() {\r\n        setIsEdit(current => !current);\r\n    }\r\n\r\n    function changeData(data) {\r\n        props.data = data;\r\n        setData(data);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div id=\"Box\" onClick={toggleEdit}>\r\n                <img src={defaultProfile} alt=\"Profile Photo\" />\r\n                <div className=\"Box-name\">{data.own.name}</div>\r\n            </div>\r\n            {\r\n                isEdit && <EditMenu setData={setData} setIsEdit={setIsEdit} data={props.data} />\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nfunction EditMenu(props) {\r\n\r\n    const [name, setName] = useState(props.data.own.name);\r\n    function changeName(name) {\r\n        setName(name);\r\n    }\r\n\r\n    const [errors, setErrors] = useState([])\r\n\r\n    function submit() {\r\n        if (name === '') {\r\n            setErrors(current => [...current, \"Empty name is not allowed!\"]);\r\n            setTimeout(() => {\r\n                setErrors(current => {\r\n                    console.log(current);\r\n                    return current.splice(0, 1);\r\n                })\r\n            }, 3000);\r\n        } else {\r\n            props.setIsEdit(current => !current);\r\n            props.data.own.name = name;\r\n            props.setData(current => ({ ...current, own: { ...current.own, name: name } }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"EditMenu\">\r\n            <div className=\"in\">\r\n                <div className=\"in-Name\">\r\n                    <label htmlFor=\"in-name\">\r\n                        Name: <input type=\"text\" name=\"\" id=\"in-name\" value={name} onChange={(e) => changeName(e.target.value)} />\r\n                    </label>\r\n                </div>\r\n                <button onClick={submit}>Submit</button>\r\n            </div>\r\n\r\n            <div className=\"errors\">\r\n                {\r\n                    errors.map(error => (\r\n                        <div className=\"error\">{error}</div>\r\n                    ))\r\n                }\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Box\r\n","D:\\Sanjay\\Git and Github\\My Repos\\fami-tree\\src\\components\\Container\\index.js",[],{"ruleId":"29","severity":1,"message":"30","line":14,"column":14,"nodeType":"31","messageId":"32","endLine":14,"endColumn":24},{"ruleId":"33","severity":1,"message":"34","line":22,"column":17,"nodeType":"35","endLine":22,"endColumn":65},"no-unused-vars","'changeData' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]